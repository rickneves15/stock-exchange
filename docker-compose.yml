version: "3.7"
services:
    app:
        container_name: api
        build:
            args:
                user: rickneves
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - stock-exchange
        depends_on:
            - postgres
            - nginx

    postgres:
        container_name: postgres
        image: postgres
        restart: always
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: stock_exchange
            POSTGRES_PASSWORD: root
            POSTGRES_USER: root
            PGDATA: /var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - stock-exchange

    postgres-test:
        container_name: postgres-test
        image: postgres
        restart: always
        volumes:
            - postgres-data:/var/lib/postgresql/data-test
        environment:
            POSTGRES_DB: stock_exchange_test
            POSTGRES_PASSWORD: root
            POSTGRES_USER: root
            PGDATA: /var/lib/postgresql/data-test
        ports:
            - "5431:5432"
        networks:
            - stock-exchange

    postgresadmin:
        container_name: postgresadmin
        image: dpage/pgadmin4
        ports:
            - "5050:80"
        depends_on:
            - postgres
        environment:
            PGADMIN_DEFAULT_EMAIL: ricknevesbc@hotmail.com
            PGADMIN_DEFAULT_PASSWORD: root
        networks:
            - stock-exchange

    nginx:
        container_name: nginx
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www
            - ./.docker/nginx:/etc/nginx/conf.d
        networks:
            - stock-exchange
networks:
    stock-exchange:
        driver: bridge

volumes:
    postgres-data:
